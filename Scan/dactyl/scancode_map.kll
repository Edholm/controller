Name = Dactyl;
Version = 1.0;
Author = "Emil Edholm";
KLL = 0.3c;

# Modified Date
Date = 2017-01-22;

###### Left hand ######

# Col 1
S0x3C : U"Equals";
S0x30 : U"Tab";
S0x24 : U"Esc";
S0x18 : U"Shift";
S0x0C : U"Iso/";

# Col 2
S0x3D : U"1";
S0x31 : U"Q";
S0x25 : U"A";
S0x19 : U"Z";
S0x0D : U"Home";

# Col 3
S0x3E : U"2";
S0x32 : U"W";
S0x26 : U"S";
S0x1A : U"X";
S0x0E : U"PageUp";

# Col 4
S0x3F : U"3";
S0x33 : U"E";
S0x27 : U"D";
S0x1B : U"C";
S0x0F : U"Up";

# Col 5
S0x40 : U"4";
S0x34 : U"R";
S0x28 : U"F";
S0x1C : U"V";
S0x10 : U"Down";

# Col 6
S0x41 : U"5";
S0x35 : U"T";
S0x29 : U"G";
S0x1D : U"B";

# Thumb cluster
S0x05 : U"Ctrl";  S0x04 : U"RAlt";
S0x00 : U"BackSpace"; S0x01 : U"Delete"; S0x03 : layerShift(1);
S0x02 : U"Shift";

###### Right hand ######

# Thumb cluster
S0x07 : U"RAlt"; S0x06 : U"LCtrl";
S0x08 : layerShift(2);  S0x0A : U"Enter"; S0x0B : U"Space";
S0x09 : U"LGui";

# Col 1
S0x42 : U"6";
S0x36 : U"Y";
S0x2A : U"H";
S0x1E : U"N";

# Col 2
S0x43 : U"7";
S0x37 : U"U";
S0x2B : U"J";
S0x1F : U"M";
S0x13 : U"Left";

# Col 3
S0x44 : U"8";
S0x38 : U"I";
S0x2C : U"K";
S0x20 : U"Comma";
S0x14 : U"Right";

# Col 4
S0x45 : U"9";
S0x39 : U"O";
S0x2D : U"L";
S0x21 : U"Period";
S0x15 : U"PageDown";

# Col 5
S0x46 : U"0";
S0x3A : U"P";
S0x2E : U"Semicolon"; # Ö
S0x22 : U"Slash";
S0x16 : U"End";

# Col 6
S0x47 : U"Minus";
S0x3B : U"LBrace";
S0x2F : U"Quote"; # Ä
S0x23 : U"BackSlash";
S0x17 : U"Delete";


# Custom Action Examples
# Example capability, prints to cli action1 => CustomAction_action1_capability(); # No arguments

# Blocks given USB Code, must be used with blockLink
# Simple example, supports only blocking a single key at a time
# Keys must be specified using numbers see Macro/PartialMap/usb_hid.h
#blockHold => CustomAction_blockHold_capability( usbCode : 1 ); # Single 8-bit argument
#blockKey => CustomAction_blockKey_capability( usbCode : 1 );

